import CodeMirror from '@uiw/react-codemirror';
import {xml}  from '@codemirror/lang-xml';

export const ProjectCodeMirror = ({ value }: { value?: string | "" }) => {
    // const value = "<?xml version='1.1' encoding='UTF-8'?>\n<flow-definition plugin=\"workflow-job@2.41\">\n  <actions>\n    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin=\"pipeline-model-definition@1.8.5\"/>\n    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin=\"pipeline-model-definition@1.8.5\">\n      <jobProperties/>\n      <triggers>\n        <string>org.jenkinsci.plugins.gwt.GenericTrigger</string>\n      </triggers>\n      <parameters/>\n      <options/>\n    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>\n  </actions>\n  <description></description>\n  <keepDependencies>false</keepDependencies>\n  <properties>\n    <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin=\"gitlab-plugin@1.5.20\">\n      <gitLabConnection>karp gitlab</gitLabConnection>\n      <jobCredentialId></jobCredentialId>\n      <useAlternativeCredential>false</useAlternativeCredential>\n    </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>\n    <jenkins.model.BuildDiscarderProperty>\n      <strategy class=\"hudson.tasks.LogRotator\">\n        <daysToKeep>-1</daysToKeep>\n        <numToKeep>10</numToKeep>\n        <artifactDaysToKeep>-1</artifactDaysToKeep>\n        <artifactNumToKeep>-1</artifactNumToKeep>\n      </strategy>\n    </jenkins.model.BuildDiscarderProperty>\n    <org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>\n      <triggers>\n        <org.jenkinsci.plugins.gwt.GenericTrigger plugin=\"generic-webhook-trigger@1.72\">\n          <spec></spec>\n          <genericVariables>\n            <org.jenkinsci.plugins.gwt.GenericVariable>\n              <expressionType>JSONPath</expressionType>\n              <key>ref</key>\n              <value>$.ref</value>\n              <regexpFilter></regexpFilter>\n              <defaultValue></defaultValue>\n            </org.jenkinsci.plugins.gwt.GenericVariable>\n            <org.jenkinsci.plugins.gwt.GenericVariable>\n              <expressionType>JSONPath</expressionType>\n              <key>COMMIT_TITLE</key>\n              <value>$.commits[0].title</value>\n              <regexpFilter></regexpFilter>\n              <defaultValue></defaultValue>\n            </org.jenkinsci.plugins.gwt.GenericVariable>\n            <org.jenkinsci.plugins.gwt.GenericVariable>\n              <expressionType>JSONPath</expressionType>\n              <key>COMMIT_TIMESTAMP</key>\n              <value>$.commits[0].timestamp</value>\n              <regexpFilter></regexpFilter>\n              <defaultValue></defaultValue>\n            </org.jenkinsci.plugins.gwt.GenericVariable>\n            <org.jenkinsci.plugins.gwt.GenericVariable>\n              <expressionType>JSONPath</expressionType>\n              <key>COMMIT_AUTHOR</key>\n              <value>$.commits[0].author.name</value>\n              <regexpFilter></regexpFilter>\n              <defaultValue></defaultValue>\n            </org.jenkinsci.plugins.gwt.GenericVariable>\n          </genericVariables>\n          <regexpFilterText>$ref</regexpFilterText>\n          <regexpFilterExpression>(refs/heads/master)$</regexpFilterExpression>\n          <printPostContent>false</printPostContent>\n          <printContributedVariables>false</printContributedVariables>\n          <causeString> Triggered on $ref</causeString>\n          <token>{{.BranchName}}</token>\n          <tokenCredentialId></tokenCredentialId>\n          <silentResponse>false</silentResponse>\n          <overrideQuietPeriod>false</overrideQuietPeriod>\n        </org.jenkinsci.plugins.gwt.GenericTrigger>\n      </triggers>\n    </org.jenkinsci.plugins.workflow.job.properties.PipelineTriggersJobProperty>\n  </properties>\n  <definition class=\"org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition\" plugin=\"workflow-cps@2.92\">\n    <script>pipeline {\n    agent none\n    triggers {\n      GenericTrigger (  causeString: &apos; Triggered on $ref&apos; , \n                        genericVariables: [\n                            [key: &apos;ref&apos;, value: &apos;$.ref&apos;],\n                            [key: &apos;COMMIT_TITLE&apos;, value: &apos;$.commits[0].title&apos;],\n                            [key: &apos;COMMIT_TIMESTAMP&apos;, value: &apos;$.commits[0].timestamp&apos;],\n                            [key: &apos;COMMIT_AUTHOR&apos;, value: &apos;$.commits[0].author.name&apos;]\n                        ], \n                        regexpFilterExpression: &apos;(refs/heads/master)$&apos;, \n                        regexpFilterText: &apos;$ref&apos;, \n                        token: &apos;ebee_admin&apos;, \n                        tokenCredentialId: &apos;&apos;\n                    )\n    }\n\n    stages {\n        stage(&apos;拉取源码&apos;) {\n            agent any\n            steps {\n                echo &quot;get ebee_admin dev source&quot;\n                checkout(\n                    [\n                        $class: &apos;GitSCM&apos;, \n                        branches: [[name: &apos;*/dev&apos;]], \n                        extensions: [], \n                        userRemoteConfigs: [[\n                            credentialsId: &apos;11088fcd-aea0-4d72-b642-fb51b765c3aa&apos;, \n                            url: &apos;http://192.168.1.223/ET/ebee_admin.git&apos;\n                        ]]\n                    ]\n                )\n                // sh &quot;rm -rf node_modules/&quot;\n                sh &quot;rm -rf config/&quot;\n                sh &quot;cp -r configcopy/ config/&quot;\n                sh &quot;rm -rf /dist&quot;\n            }\n        }\n        stage(&apos;打包源码&apos;) {\n            agent { \n                docker {\n                    image &apos;node:10.15.3&apos;\n                } \n            }\n            steps {\n                sh &quot;npm install&quot;\n                sh &quot;npm run build&quot;\n            }\n        }\n        stage(&apos;部署&apos;) {\n            agent any\n            steps {\n                sh &apos;docker rm -f {{.BranchName}}&apos;\n                sh &apos;docker run -d -p {{.Port}}:80 -v /var/lib/docker/volumes/jenkins-data/_data/jobs/{{.BranchName}}/workspace/dist/:/usr/share/nginx/html/  -v /home/{{.BranchName}}/default.conf:/etc/nginx/conf.d/defauil.conf  --privileged=true --name {{.BranchName}} nginx&apos;\n            }\n        }\n    }\n    post{\n        always {\n            script{\n                def result = &quot;&quot;\n                if (currentBuild.result == &quot;SUCCESS&quot;){\n                    result = &quot;成功&quot;\n                }else{\n                    result = &quot;失败&quot;\n                }\n                def title = env.COMMIT_AUTHOR + &apos; [{{.BranchName}}]第&apos; + env.BUILD_ID + &apos;次部署&apos;+ result\n                def content = &quot;### &quot; + title + &quot;\\n&quot; + &quot;&gt; &quot; + env.COMMIT_TIMESTAMP + &quot;\\n\\n&quot; + &quot;&gt; commit ：&quot; + env.COMMIT_TITLE + &quot;\\n\\n&quot; + &quot;&gt; [jenkins 控制台输出](&quot; + env.BUILD_URL +&quot;/console)\\n&quot;\n                def pagrem = [&quot;msgtype&quot;:&quot;markdown&quot;, &quot;markdown&quot;:[&quot;title&quot;: title, &quot;text&quot;: content,]]\n                httpRequest httpMode: &apos;POST&apos;, \n                            ignoreSslErrors: true, \n                            customHeaders: [[maskValue: false, name: &apos;charset&apos;, value: &apos;utf-8&apos;], [maskValue: false, name: &apos;Content-Type&apos;, value: &apos;application/json&apos;]],\n                            requestBody: groovy.json.JsonOutput.toJson(pagrem),\n                            responseHandle: &apos;NONE&apos;, \n                            //url: &quot;https://oapi.dingtalk.com/robot/send?access_token=7088917a6944da64219a6123ca148e08ab9149d33650139f8360e2b0b18d8be7&quot;,\n                            url: &quot;https://oapi.dingtalk.com/robot/send?access_token=e7421b716227c02f0a5f8f02f341118e1c5bb7c3f19967f58acc866f6e9103e9&quot;,\n                            wrapAsMultipart: false\n                }\n        }\n    }\n}</script>\n    <sandbox>true</sandbox>\n  </definition>\n  <triggers/>\n  <disabled>false</disabled>\n</flow-definition>"
    return (
        <div style={{fontSize: "1.5rem",}}>
            <CodeMirror
                value={value}
                height="auto"
                maxHeight={"80vh"}
                width='80vw'
                extensions={[xml()]}
                onChange={(value, viewUpdate) => {
                    console.log("value:", value);
                }}
            />
        </div>
    );
}
